@mixin set-variables ($map) {
    @each $key, $value in $map {
        --#{$key}: #{$value};
    }
}


$breakpoints: (
    xs: 0rem,
    sm: 40rem, 
    md: 64rem,
    lg: 75rem, 
);

@mixin respond-to($key) {
    $breakpoint: map-get($breakpoints,  $key);
    @if($breakpoint != null) {
        @if $key == 'xs' {
            @content;
        }@else{
            @media screen and (min-width: $breakpoint) {
                @content;
            }
        }
    }@else {
        @warn "Unknown breakpoint";
    }
};

@mixin generate_classes($properties) {    
    $class: map-get($properties, "class");
    $values: map-get($properties, "values");
    $property: map-get($properties, "property");
    $responsive: map-get($properties, "responsive");
    $append: map-get($properties, "append");
    $pseudos: if(map-has-key($properties, "pseudos"), map-get($properties, "pseudos"), null);

    $breakpoints : ();

    @if($responsive == true) {
        $breakpoints: map-merge($breakpoints, ((
            xs: 0rem,
            sm: 40rem, 
            md: 64rem,
            lg: 75rem, 
        )));
    } @else {
        $breakpoints: map-merge($breakpoints, ((
            xs: 0rem,
        )));
    }

    $cs: if($class != null, #{$class}-, '');
    $ap: if($append != null, #{$append} ,'');


    @each $breakpoint, $_ in $breakpoints {
        @include respond-to($breakpoint) {
            $bp: if($breakpoint == 'xs', '', #{$breakpoint}\:);

            @each $value, $map in $values {
                .#{$bp}#{$cs}#{$value}#{$ap} {
                    @if (type-of($map) == 'map'){ 
                        @each $prop, $prop-value in $map {
                            #{$prop}: #{$prop-value};
                        }
                    }@else{
                        #{$property}: #{$map};
                    }
                }

                @if($pseudos != null) {
                    @each $pseudo, $pseudo-value in $pseudos {
                        .#{$pseudo}\:#{$bp}#{$cs}#{$value}#{$ap} {
                            &#{$pseudo-value} {
                                @if (type-of($map) == 'map'){ 
                                    @each $prop, $prop-value in $map {
                                        #{$prop}: #{$prop-value};
                                    }
                                }@else{
                                    #{$property}: #{$map};
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}